CREATE TABLE IF NOT EXISTS  scale_policies ( id SERIAL PRIMARY KEY, name VARCHAR(1000000) NOT NULL UNIQUE, data VARCHAR(1000000) NOT NULL, updated BIGINT NOT NULL );
CREATE TABLE IF NOT EXISTS  launch_configs ( id SERIAL PRIMARY KEY, name VARCHAR(1000000) NOT NULL UNIQUE, data VARCHAR(1000000) NOT NULL, updated BIGINT NOT NULL );
CREATE TABLE IF NOT EXISTS  stream_meta ( id SERIAL PRIMARY KEY, name VARCHAR(1000000) NOT NULL, scope VARCHAR(1000000) NOT NULL, meta VARCHAR(1000000), updated BIGINT NOT NULL );
CREATE TABLE IF NOT EXISTS  node_group ( id SERIAL PRIMARY KEY, name VARCHAR(1000000) DEFAULT NULL UNIQUE, originConnections BIGINT NOT NULL, regions VARCHAR(1000000), launch_config VARCHAR(1000000) NOT NULL, scale_policy VARCHAR(1000000) NOT NULL, meta VARCHAR(1000000), type BIGINT DEFAULT 0, state BIGINT DEFAULT 0, created BIGINT DEFAULT -1 NOT NULL, updated BIGINT DEFAULT -1 NOT NULL, state_updated BIGINT DEFAULT -1 NOT NULL , FOREIGN KEY (scale_policy) REFERENCES scale_policies (name) ON UPDATE NO ACTION, FOREIGN KEY (launch_config) REFERENCES launch_configs (name) ON UPDATE NO ACTION );
CREATE TABLE IF NOT EXISTS  node ( id SERIAL PRIMARY KEY, host VARCHAR(1000000) NOT NULL UNIQUE, hostname VARCHAR(1000000) DEFAULT NULL, state BIGINT DEFAULT 0, type BIGINT DEFAULT 0, name VARCHAR(1000000) DEFAULT NULL UNIQUE, node_platform_id VARCHAR(1000000) DEFAULT NULL, region VARCHAR(1000000) DEFAULT NULL, geozone VARCHAR(1000000) DEFAULT 'global' NOT NULL, launchTime BIGINT DEFAULT 0 NOT NULL , group_id BIGINT NOT NULL, created BIGINT DEFAULT -1 NOT NULL , updated BIGINT DEFAULT -1 NOT NULL , state_updated BIGINT DEFAULT -1 NOT NULL, FOREIGN KEY (group_id) REFERENCES node_group (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  alarm_target ( id SERIAL PRIMARY KEY, target_type BIGINT DEFAULT 1 NOT NULL , target_sub_type BIGINT DEFAULT 0 NOT NULL , aux_data VARCHAR(1000000) );
INSERT INTO alarm_target ( id, target_type, target_sub_type, aux_data ) VALUES (1, 1, 4, NULL), (2, 1, 2, NULL), (3, 1, 3, NULL), (4, 1, 6, NULL);
CREATE TABLE IF NOT EXISTS  alarm_conditions ( id SERIAL PRIMARY KEY, metric BIGINT DEFAULT 3 NOT NULL , unit BIGINT DEFAULT 0 NOT NULL , threshold REAL DEFAULT 0 NOT NULL, comparator BIGINT DEFAULT 2 NOT NULL  );
INSERT INTO alarm_conditions ( id, metric, unit, threshold, comparator ) VALUES (1, 3, 0, 60, 2), (2, 3, 0, 0, 0), (3, 3, 0, 60, 2), (4, 3, 0, 0, 0), (5, 3, 0, 60, 2), (6, 3, 0, 0, 0), (7, 3, 0, 60, 2), (8, 3, 0, 0, 0);
CREATE TABLE IF NOT EXISTS  alarms ( id SERIAL PRIMARY KEY, type BIGINT DEFAULT 0 NOT NULL , alarm_conditions_id BIGINT DEFAULT 1 NOT NULL , trigger_type BIGINT DEFAULT 0 NOT NULL , target_type BIGINT DEFAULT 0 NOT NULL , FOREIGN KEY (alarm_conditions_id) REFERENCES alarm_conditions (id), FOREIGN KEY (target_type) REFERENCES alarm_target (id) ON DELETE CASCADE );
INSERT INTO alarms ( id, type, alarm_conditions_id, trigger_type, target_type ) VALUES (1, 0, 1, 0, 1), (2, 0, 3, 0, 2), (3, 1, 4, 1, 2), (4, 0, 5, 0, 3), (5, 1, 6, 1, 3), (6, 1, 2, 1, 1), (7, 0, 7, 0, 4), (8, 1, 8, 1, 4);
CREATE TABLE IF NOT EXISTS  active_alarms ( id SERIAL PRIMARY KEY, alarm_id BIGINT NOT NULL, node_group_id BIGINT DEFAULT 0 NOT NULL , region VARCHAR(1000000) DEFAULT 'default' NOT NULL , last_active BIGINT DEFAULT 0 NOT NULL , state BIGINT DEFAULT 0 NOT NULL , state_updated BIGINT DEFAULT 0 NOT NULL , FOREIGN KEY (alarm_id) REFERENCES alarms (id) ON DELETE CASCADE, FOREIGN KEY (node_group_id) REFERENCES node_group (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  autoscalelog ( id SERIAL PRIMARY KEY , group_id BIGINT NOT NULL, alarm_trigger_type BIGINT DEFAULT 1, scale_policy VARCHAR(1000000) DEFAULT NULL, timestamp BIGINT DEFAULT 0 NOT NULL , FOREIGN KEY (group_id) REFERENCES node_group (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  cluster_relations ( id SERIAL PRIMARY KEY, child_id BIGINT DEFAULT 0 NOT NULL , parent_id BIGINT DEFAULT 0 NOT NULL , FOREIGN KEY (child_id) REFERENCES node (id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (parent_id) REFERENCES node (id) ON DELETE CASCADE ON UPDATE CASCADE );
CREATE TABLE IF NOT EXISTS  cluster_link ( link_id SERIAL PRIMARY KEY, relation_id BIGINT NOT NULL, state BIGINT NOT NULL, state_updated BIGINT DEFAULT -1 NOT NULL , FOREIGN KEY (relation_id) REFERENCES cluster_relations (id) ON DELETE CASCADE ON UPDATE CASCADE );
CREATE TABLE IF NOT EXISTS  crons ( id SERIAL PRIMARY KEY, name VARCHAR(1000000) NOT NULL, host VARCHAR(1000000) DEFAULT NULL, start_time BIGINT DEFAULT 0 NOT NULL , end_time BIGINT DEFAULT 0 NOT NULL  );
CREATE TABLE IF NOT EXISTS  group_statistics ( id SERIAL PRIMARY KEY, group_id BIGINT NOT NULL, target_type BIGINT NOT NULL, net_capacity_count BIGINT NOT NULL, net_load_count BIGINT NOT NULL, created BIGINT DEFAULT 0 NOT NULL , updated BIGINT DEFAULT 0 NOT NULL , FOREIGN KEY (group_id) REFERENCES node_group (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  loc_geozones ( id SERIAL PRIMARY KEY, name VARCHAR(1000000) NOT NULL UNIQUE, code VARCHAR(1000000) NOT NULL UNIQUE );
CREATE TABLE IF NOT EXISTS  loc_regions ( id SERIAL PRIMARY KEY, name VARCHAR(1000000) NOT NULL UNIQUE, code VARCHAR(1000000) NOT NULL UNIQUE, geozone_id BIGINT NOT NULL, FOREIGN KEY (geozone_id) REFERENCES loc_geozones (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  managers ( id SERIAL PRIMARY KEY, host VARCHAR(1000000) NOT NULL UNIQUE, last_ping BIGINT DEFAULT 0 NOT NULL  );
CREATE TABLE IF NOT EXISTS  node_info ( info_id SERIAL PRIMARY KEY, node_id BIGINT DEFAULT NULL UNIQUE, client_count BIGINT DEFAULT 0, publisher_count BIGINT DEFAULT 0 NOT NULL , origins VARCHAR(1000000), edges VARCHAR(1000000), connection_capacity BIGINT DEFAULT NULL, extended_client_count BIGINT DEFAULT 0 NOT NULL , processors BIGINT DEFAULT 0 NOT NULL , freememory BIGINT DEFAULT 0 NOT NULL , maxmemory BIGINT DEFAULT 0 NOT NULL , totalmemory BIGINT DEFAULT 0 NOT NULL , committedvirtualmemorysize BIGINT DEFAULT 0 NOT NULL , totalswapspacesize BIGINT DEFAULT 0 NOT NULL , freeswapspacesize BIGINT DEFAULT 0 NOT NULL , freephysicalmemorysize BIGINT DEFAULT 0 NOT NULL , openfiledescriptorcount BIGINT DEFAULT 0 NOT NULL , maxFileDescriptorCount BIGINT DEFAULT 0 NOT NULL , systemcpuload NUMERIC DEFAULT 0 NOT NULL, processcpuload NUMERIC DEFAULT 0 NOT NULL, last_traffic_time BIGINT DEFAULT 0 NOT NULL , last_ping BIGINT DEFAULT 0 NOT NULL , restreamer_count BIGINT DEFAULT 0 NOT NULL , FOREIGN KEY (node_id) REFERENCES node (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  node_meta ( id SERIAL PRIMARY KEY, node_id BIGINT NOT NULL, meta_id BIGINT NOT NULL, updated BIGINT DEFAULT 0 NOT NULL , FOREIGN KEY (node_id) REFERENCES node (id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (meta_id) REFERENCES stream_meta (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  short_term_stream_info ( id SERIAL PRIMARY KEY, name VARCHAR(1000000) NOT NULL, scope VARCHAR(1000000) NOT NULL, start_time BIGINT NOT NULL, end_time BIGINT NOT NULL, duration BIGINT DEFAULT 0 NOT NULL , current_subscribers BIGINT DEFAULT 0 NOT NULL , max_subscribers BIGINT DEFAULT 0 NOT NULL , lost_subscribers BIGINT DEFAULT 0 NOT NULL , total_subscribers BIGINT DEFAULT 0 NOT NULL , updated BIGINT NOT NULL );
CREATE TABLE IF NOT EXISTS  stream_info ( id SERIAL PRIMARY KEY, node_id BIGINT DEFAULT NULL, name VARCHAR(1000000) DEFAULT NULL, description VARCHAR(1000000), scope VARCHAR(1000000) DEFAULT NULL, current_subscribers BIGINT DEFAULT 0 NOT NULL, max_subscribers BIGINT DEFAULT 0 NOT NULL , lost_subscribers BIGINT DEFAULT 0 NOT NULL , start_time BIGINT DEFAULT 0  NOT NULL, updated BIGINT DEFAULT 0 NOT NULL , FOREIGN KEY (node_id) REFERENCES node (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  vod_stream_info ( id SERIAL PRIMARY KEY, node_id BIGINT NOT NULL , name VARCHAR(1000000) NOT NULL , extension VARCHAR(1000000) NOT NULL , scope VARCHAR(1000000) NOT NULL , current_subscribers BIGINT DEFAULT 0 NOT NULL, max_subscribers BIGINT DEFAULT 0 NOT NULL , lost_subscribers BIGINT DEFAULT 0 NOT NULL , last_update BIGINT NOT NULL, FOREIGN KEY (node_id) REFERENCES node (id) ON DELETE CASCADE );
CREATE TABLE IF NOT EXISTS  schedule_event ( id SERIAL PRIMARY KEY, event_name VARCHAR(1000000) NOT NULL UNIQUE, node_group VARCHAR(1000000), date BIGINT NOT NULL, quartz_job VARCHAR(1000000) NOT NULL, scale_info VARCHAR(1000000) NOT NULL, state BIGINT DEFAULT 0 NOT NULL);
CREATE TABLE IF NOT EXISTS  subscribe_config ( id SERIAL PRIMARY KEY, url_construct VARCHAR(1000000) NOT NULL, timeout BIGINT DEFAULT 5 NOT NULL);
CREATE TABLE IF NOT EXISTS  publish_config ( id SERIAL PRIMARY KEY, protocol VARCHAR(1000000) NOT NULL, host VARCHAR(1000000) NOT NULL, port VARCHAR(1000000) NOT NULL, token VARCHAR(1000000) NOT NULL, validate_point VARCHAR(1000000) NOT NULL, timeout BIGINT DEFAULT 5 NOT NULL);
CREATE TABLE IF NOT EXISTS  cors_config ( id SERIAL PRIMARY KEY, group_name VARCHAR(1000000) NOT NULL, config VARCHAR(1000000) NOT NULL, role VARCHAR(1000000) NULL );
INSERT INTO cors_config (id, group_name, config) VALUES ( 1, 'default', 'cors.tagRequests=false;cors.maxAge=3600;cors.exposedHeaders=*;cors.supportsCredentials=true;cors.supportedHeaders=;cors.allowSubdomains=true;cors.supportedMethods=GET, HEAD;cors.allowOrigin=*' );